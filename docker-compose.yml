version: "3"

services:
  minio:
    container_name: minio
    image: 'bitnami/minio:latest'
    volumes:
      - 'minio_data:/data'
    ports:
      - "9000:9000"
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: "root"
      MINIO_ROOT_PASSWORD: "minio_password"
      MINIO_USE_SSL: "false"
      MINIO_DEFAULT_BUCKETS: "bucket_name"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  rest-server:
    build:
      context: ./
      dockerfile: restServer/Dockerfile
    container_name: restServer
    ports:
      - "8081:8080"
    networks:
      - internalNetwork
    depends_on:
      minio:
        condition: service_started
      db:
        condition: service_healthy

    #environment:
    restart: always

  db:
    image: postgres:17-alpine
    container_name: db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: musicService
    networks:
      - internalNetwork
    ports:
      - "6431:5432"
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  minio_data:

networks:
    internalNetwork:
        driver: bridge
